{"version":3,"sources":["webpack:///./src/components/viewContainer/masterView.tsx","webpack:///./src/components/viewContainer/search.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA6C;AAEf;AAG7B,CAAC;AACF,+BAA+B;AAC/B;IAAwC,8BAAsB;IAA9D;;IAuBA,CAAC;IArBG;;;;;;;;SAQK;IAEL,2BAAM,GAAN;QACI,OAAO,CACH;YACI;gBACI,2DAAC,+CAAM,OAAG,CACR;YACN,uEACM,CACH,CACV,CAAC;IACN,CAAC;IAAA,CAAC;IACN,iBAAC;AAAD,CAAC,CAvBuC,4CAAK,CAAC,SAAS,GAuBtD;;AAAA,CAAC;AAEF,IAAM,SAAS,GAAkB;IAC7B,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,KAAK;CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCuD;AACS;AAGhE,CAAC;AAKD,CAAC;AAEF;IAAoC,0BAAuB;IACvD,gBAAY,KAAY;QAAxB,YACI,kBAAM,KAAK,CAAC,SAOf;QAUD,kBAAY,GAAG,UAAC,KAAU;YACtB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,oEAAoE;YACpE,KAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAChC,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC1D,iBAAiB;YACjB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;QAvBE,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjD,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjD,KAAI,CAAC,KAAK,GAAG;YACT,UAAU,EAAE,EAAE;YACd,MAAM,EAAE,KAAK;SAChB,CAAC;;IACN,CAAC;IAAA,CAAC;IAEF,6BAAY,GAAZ,UAAa,KAAU;QACnB,gDAAgD;QAChD,IAAM,YAAY,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IAWD,uBAAM,GAAN;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACpB,OAAO,CACH,qEAAM,QAAQ,EAAE,IAAI,CAAC,YAAY;gBAC7B,sEAAO,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,GAAU;gBACtE,uEAAQ,IAAI,EAAC,QAAQ,eAAa,CAC/B,CACV,CAAC;SACL;QAAA,CAAC;QAEF,OAAO,CACH,2DAAC,yDAAQ,IAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAI,CAC1C,CAAC;IACN,CAAC;IAAA,CAAC;IACN,aAAC;AAAD,CAAC,CA1CmC,+CAAS,GA0C5C","file":"masterView.bundle.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\nimport Search from './search';\n\ninterface Props extends RouteComponentProps {\n};\n/** React function component */\nexport default class MasterView extends React.Component<Props> {\n\n    /* return (\n        <div style={container}>\n            {props.detailViews.map((view) => (\n                <ViewSection key={view}>\n                    <ImageLink view={view} />\n                </ViewSection>\n            ))}\n        </div>\n    ); */\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Search />\n                </div>\n                <div>\n                </div>\n            </div >\n        );\n    };\n};\n\nconst container: CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    margin: '1em'\n}","import React, { Component, CSSProperties } from 'react';\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\r\n\r\ninterface Props extends RouteComponentProps {\r\n};\r\n\r\ninterface State {\r\n    searchTerm: string\r\n    search: boolean\r\n};\r\n\r\nexport default class Search extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.state = {\r\n            searchTerm: '',\r\n            search: false\r\n        };\r\n    };\r\n\r\n    handleChange(event: any) {\r\n        //change state so we can reroute save searchTerm\r\n        const searchingFor = \"/\" + event.target.value;\r\n        this.setState({ searchTerm: searchingFor });\r\n        console.log(event.target.value);\r\n        console.log(this.state.searchTerm);\r\n    }\r\n\r\n    handleSearch = (event: any) => {\r\n        event.preventDefault();\r\n        //change state so we can reroute and save searchTerm in localstorage\r\n        this.setState({ search: true });\r\n        localStorage.setItem('searchTerm', this.state.searchTerm);\r\n        // change the url\r\n        this.props.history.push(this.state.searchTerm);\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.search) {\r\n            return (\r\n                <form onSubmit={this.handleSearch}>\r\n                    <input type=\"text\" name=\"search\" onChange={this.handleChange}></input>\r\n                    <button type=\"submit\">SÃ¶k</button>\r\n                </form>\r\n            );\r\n        };\r\n\r\n        return (\r\n            <Redirect to={this.state.searchTerm} />\r\n        );\r\n    };\r\n}"],"sourceRoot":""}