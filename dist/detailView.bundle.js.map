{"version":3,"sources":["webpack:///./src/components/viewContainer/detailView/detailView.tsx","webpack:///./src/components/viewContainer/detailView/headerSection.tsx","webpack:///./src/components/viewContainer/detailView/imageCard.tsx","webpack:///./src/components/viewContainer/detailView/imageSection.tsx","webpack:///./src/components/viewContainer/detailView/textSection.tsx"],"names":[],"mappings":"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","file":"detailView.bundle.js","sourcesContent":["import React, { Component, CSSProperties } from 'react';\nimport { fullscreenAbsolute } from '../../../css';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Modal from '../../modal';\nimport HeaderSection from './headerSection';\nimport TextSection from './textSection';\nimport ImageSection from './imageSection';\nimport { ThemedCSSProperties, ThemeContext } from '../../../contexts/themeContext';\nimport Button from '../../button';\n\ninterface Props extends RouteComponentProps { }\n\ninterface State {\n    isModalOpen: boolean\n}\n\nexport default class DetailView extends Component<Props, State> {\n\n    state: State = {\n        isModalOpen: false\n    }\n\n    get view() {\n        return this.props.location.pathname;\n    }\n\n    get imageSrc() {\n        return `../assets/${this.view}.jpg`;\n    }\n\n    openModal = () => this.setState({ isModalOpen: true });\n    closeModal = () => this.setState({ isModalOpen: false });\n\n    render() {\n        return (\n            <ThemeContext.Consumer>\n                {({ theme }) => (\n                    <div style={container}>\n                        <img src={this.imageSrc} style={{ ...fullscreenAbsolute }} />\n                        <div style={{ ...content(theme), ...fullscreenAbsolute }}>\n\n                            <div style={flexContainer}>\n                                <HeaderSection view={this.view} openModal={this.openModal} />\n                                <TextSection view={this.view} />\n                                <ImageSection view={this.view} />\n                            </div>\n\n                        </div>\n                        {\n                            this.state.isModalOpen ? (\n                                <Modal persistent shouldClose={this.closeModal}>\n                                    <h3>Modal opened from <span style={highlighted}>{this.view}</span> view</h3>\n                                    <Button onClick={this.closeModal}>Close modal</Button>\n                                </Modal>\n                            ) : null\n                        }\n                    </div>\n                )}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n\nconst highlighted: CSSProperties = {\n    color: 'orange'\n}\n\nconst content: ThemedCSSProperties = (theme) => ({\n    zIndex: 10,\n    background: `${theme.background.primary}B3`,\n    overflowY: 'auto'\n})\n\nconst container: CSSProperties = {\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n}\n\nconst flexContainer: CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '1em'\n}","import React, { CSSProperties } from 'react';\nimport { ThemedCSSProperties, ThemeContext } from '../../../contexts/themeContext';\nimport Button from '../../button';\n\ninterface Props {\n    view: string\n    openModal: () => void;\n}\n\nexport default function HeaderSection(props: Props) {\n\n    const color: CSSProperties = {\n        color: selectColor(props.view)\n    }\n\n    function selectColor(view: string) {\n        switch(view) {\n            case 'forest': return '#63b323'\n            case 'sky': return '#5fb2f6'\n            case 'desert': return '#e7a11f'\n        }\n    }\n    \n    return (\n        <ThemeContext.Consumer>\n            {({ theme }) => (\n                <div style={headerSegment}>\n                    <h2 style={{ ...header(theme), ...color }}>\n                        {props.view.toUpperCase()}\n                    </h2>\n                    <Button size=\"small\" onClick={props.openModal}>Open Modal</Button>\n                </div>\n            )}\n        </ThemeContext.Consumer>\n    )\n}\n\nconst headerSegment: CSSProperties = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n}\n\n\nconst header: ThemedCSSProperties = (theme) => ({\n    textShadow: `0px 0px 2px ${theme.background.primary}`\n})","import React, { Component, CSSProperties, Fragment } from 'react';\nimport Spinner from '../../spinner';\nimport Modal from '../../modal';\nimport { ThemedCSSProperties, ThemeContext, ThemeState } from '../../../contexts/themeContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nimport {\n    IconLookup,\n    IconDefinition,\n    findIconDefinition,\n    library\n} from '@fortawesome/fontawesome-svg-core'\n\nexport interface ImageUrls {\n    full: string\n    raw: string\n    regular: string\n    small: string\n    thumb: string\n}\n\ninterface Props {\n    urls: ImageUrls\n}\ninterface State {\n    isHover: boolean\n    isModalOpen: boolean\n}\n\nexport default class ImageCard extends Component<Props> {\n\n    state: State = {\n        isHover: false,\n        isModalOpen: false\n    }\n\n    style(theme: ThemeState): CSSProperties {\n        const hover: CSSProperties = this.state.isHover ? {\n            boxShadow: `0 8px 40px -5px ${theme.foreground.darkened}`,\n            transform: 'scale(1.05, 1.05) translateY(-1%)'\n        } : {}\n        return {\n            ...imageContainer(theme),\n            ...hover\n        }\n    }\n\n    onMouseEnter = () => this.setState({ isHover: true })\n    onMouseLeave = () => this.setState({ isHover: false })\n    openModal = () => this.setState({ isModalOpen: true });\n    closeModal = () => this.setState({ isModalOpen: false });\n\n    render() {\n        const { urls } = this.props\n        return (\n            <Fragment>\n                <ThemeContext.Consumer>\n                    {({ theme }) => (\n                        <div\n                            style={this.style(theme)}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                            onClick={this.openModal}\n                        >\n                            {urls.small ? <img src={urls.small} style={card} /> : <Spinner />}\n                        </div>\n                    )}\n                </ThemeContext.Consumer>\n                {\n                    this.state.isModalOpen ? (\n                        <Modal shouldClose={this.closeModal}>\n                            <img src={urls.regular} style={preview} />\n                            <FontAwesomeIcon icon={['fas', 'heart']} />\n                        </Modal>\n                    ) : null\n                }\n            </Fragment>\n        )\n    }\n}\n\nconst imageContainer: ThemedCSSProperties = (theme) => ({\n    margin: '1em',\n    flexGrow: 1,\n    background: `${theme.background.primary}AA`,\n    width: '12em',\n    height: '18em',\n    transition: 'all 300ms'\n})\n\nconst card: CSSProperties = {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n}\nconst preview: CSSProperties = {\n    width: '100%',\n    height: '100%',\n    objectFit: 'contain'\n}","import React, { Component } from 'react';\nimport Axios, { AxiosResponse } from 'axios';\n\nimport ImageCard, { ImageUrls } from './imageCard';\nimport { ThemedCSSProperties, ThemeContext } from '../../../contexts/themeContext';\n\ninterface Props {\n    view: string\n}\ninterface State {\n    imagesUrls: ImageUrls[],\n    isLoading: boolean\n}\n\nexport default class ImageSection extends Component<Props, State> {\n    /** Not a good place for the key.. well.. what the heck.. - GET YOUR OWN! */\n    readonly accessKey = \"d0f10826852d7d3e1e3568a14ac2c90fb33d7658759697194dea7466ea2d3196\"\n    readonly imageDatabaseApiUrl = \"https://api.unsplash.com/search/photos/\"\n\n    state: State = {\n        imagesUrls: new Array(24).fill({}),\n        isLoading: true\n    }\n\n    handleResponse(response: AxiosResponse) {\n        if (response.data && response.data.results) {\n            const images = response.data.results.map((img: any) => img.urls)\n            this.setState({ imagesUrls: images, isLoading: false })\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get(this.imageDatabaseApiUrl, {\n                params: {\n                    client_id: this.accessKey,\n                    query: this.props.view,\n                    page: Math.round(Math.random() * 100),\n                    per_page: 24,\n                }\n            })\n            this.handleResponse(response);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    render() {\n        return (\n            <ThemeContext.Consumer>\n                {({ theme }) => (\n                    <div style={root(theme)}>\n                        {this.state.imagesUrls.map((urls, index) =>\n                            <ImageCard key={index} urls={urls} />\n                        )}\n                    </div>\n                )}\n            </ThemeContext.Consumer>\n        )\n    }\n}\n\nconst root: ThemedCSSProperties = (theme) => ({\n    margin: '3em -1em -1em -1em',\n    display: 'flex',\n    flexWrap: 'wrap',\n    background: `${theme.background.primary}B3`,\n    boxShadow: `0 0px 80px 15px ${theme.background.primary}`\n})","import React, { CSSProperties, Component } from 'react';\nimport Axios, { AxiosResponse } from 'axios';\nimport Spinner from '../../spinner';\nimport { ThemeContext, ThemedCSSProperties } from '../../../contexts/themeContext';\n\ninterface Props {\n    view: string\n}\n\ninterface State {\n    paragraphs: string[]\n    isLoading: boolean\n}\n\nexport default class TextSection extends Component<Props, State> {\n\n    state: State = {\n        paragraphs: [],\n        isLoading: true\n    }\n\n    get wikipediaApiUrl() {\n        return (\n            'http://en.wikipedia.org/w/api.php?action=parse&section=0&prop=text'\n        )\n    }\n\n    stripHtmlAndReferences(htmlText: string) {\n        var doc = new DOMParser().parseFromString(htmlText, 'text/html')\n        const text = doc.body.textContent || \"\"\n        return this.removeReferences(text)\n    }\n\n    removeReferences(text: string) {\n        return text.replace(/ *\\[[^)]*\\] */g, \"\")\n    }\n\n    handleResponse(response: AxiosResponse) {\n        const htmlPageText: string = response.data.parse.text['*']\n        const paragraphs = this.extractBeginningOfText(htmlPageText)\n        this.setState({ paragraphs, isLoading: false })\n    }\n\n    extractBeginningOfText(htmlPageText: string): string[] {\n        // Split on <p>\n        const paragraphs = htmlPageText.split('<p>')\n        // Remove first content\n        paragraphs.shift()\n        // Trim end of last paragraph\n        let lastParapgraph = paragraphs.pop() || \"\"\n        lastParapgraph = lastParapgraph.substr(0, lastParapgraph.indexOf('</p>'))\n        paragraphs.push(lastParapgraph)\n\n        return paragraphs.map((p) => this.stripHtmlAndReferences(p))\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await Axios.get(this.wikipediaApiUrl, {\n                params: {\n                    page: this.props.view,\n                    origin: '*',\n                    format: 'json'\n                }\n            })\n            this.handleResponse(response)\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    render() {\n        const { isLoading, paragraphs } = this.state\n        return (\n            <ThemeContext.Consumer>\n                {({ theme }) => (\n                    <div style={root}>\n                        {isLoading ? <Spinner/> : null}\n                        {paragraphs.map((paragraph) =>\n                            <p key={paragraph.substr(0, 10)} style={text(theme)}>{paragraph}</p>\n                        )}\n                    </div>\n                )}\n            </ThemeContext.Consumer>\n        )\n    }\n}\n\nconst root: CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    minHeight: '15em'\n}\n\nconst text: ThemedCSSProperties = (theme) => ({\n    display: 'block',\n    lineHeight: '1.5',\n    fontSize: '1.1em',\n    color: theme.foreground.primary,\n    textShadow: `1px 1px 2px ${theme.background.primary}`\n})"],"sourceRoot":""}